// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Dispute _$DisputeFromJson(Map<String, dynamic> json) => $checkedCreate(
      'Dispute',
      json,
      ($checkedConvert) {
        final val = Dispute(
          id: $checkedConvert('id', (v) => v as String?),
          orderId: $checkedConvert('orderId', (v) => v as String?),
          buyerId: $checkedConvert('buyerId', (v) => (v as num?)?.toInt()),
          sellerId: $checkedConvert('sellerId', (v) => (v as num?)?.toInt()),
          type: $checkedConvert(
              'type',
              (v) => $enumDecodeNullable(_$DisputeTypeEnumEnumMap, v,
                  unknownValue: DisputeTypeEnum.unknownDefaultOpenApi)),
          status: $checkedConvert(
              'status',
              (v) => $enumDecodeNullable(_$DisputeStatusEnumEnumMap, v,
                  unknownValue: DisputeStatusEnum.unknownDefaultOpenApi)),
          description: $checkedConvert('description', (v) => v as String?),
          sellerReply: $checkedConvert('sellerReply', (v) => v as String?),
          adminComment: $checkedConvert('adminComment', (v) => v as String?),
          createdAt: $checkedConvert('createdAt',
              (v) => v == null ? null : DateTime.parse(v as String)),
          updatedAt: $checkedConvert('updatedAt',
              (v) => v == null ? null : DateTime.parse(v as String)),
          resolvedAt: $checkedConvert('resolvedAt',
              (v) => v == null ? null : DateTime.parse(v as String)),
        );
        return val;
      },
    );

Map<String, dynamic> _$DisputeToJson(Dispute instance) => <String, dynamic>{
      if (instance.id case final value?) 'id': value,
      if (instance.orderId case final value?) 'orderId': value,
      if (instance.buyerId case final value?) 'buyerId': value,
      if (instance.sellerId case final value?) 'sellerId': value,
      if (_$DisputeTypeEnumEnumMap[instance.type] case final value?)
        'type': value,
      if (_$DisputeStatusEnumEnumMap[instance.status] case final value?)
        'status': value,
      if (instance.description case final value?) 'description': value,
      if (instance.sellerReply case final value?) 'sellerReply': value,
      if (instance.adminComment case final value?) 'adminComment': value,
      if (instance.createdAt?.toIso8601String() case final value?)
        'createdAt': value,
      if (instance.updatedAt?.toIso8601String() case final value?)
        'updatedAt': value,
      if (instance.resolvedAt?.toIso8601String() case final value?)
        'resolvedAt': value,
    };

const _$DisputeTypeEnumEnumMap = {
  DisputeTypeEnum.PRODUCT_QUALITY: 'PRODUCT_QUALITY',
  DisputeTypeEnum.DELIVERY_ISSUE: 'DELIVERY_ISSUE',
  DisputeTypeEnum.REFUND_REQUEST: 'REFUND_REQUEST',
  DisputeTypeEnum.OTHER: 'OTHER',
  DisputeTypeEnum.unknownDefaultOpenApi: 'unknown_default_open_api',
};

const _$DisputeStatusEnumEnumMap = {
  DisputeStatusEnum.PENDING: 'PENDING',
  DisputeStatusEnum.RESOLVED_REFUND: 'RESOLVED_REFUND',
  DisputeStatusEnum.RESOLVED_COMPLETED: 'RESOLVED_COMPLETED',
  DisputeStatusEnum.REJECTED: 'REJECTED',
  DisputeStatusEnum.unknownDefaultOpenApi: 'unknown_default_open_api',
};
