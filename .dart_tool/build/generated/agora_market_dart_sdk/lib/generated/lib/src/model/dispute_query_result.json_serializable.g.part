// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

DisputeQueryResult _$DisputeQueryResultFromJson(Map<String, dynamic> json) =>
    $checkedCreate(
      'DisputeQueryResult',
      json,
      ($checkedConvert) {
        final val = DisputeQueryResult(
          dispute: $checkedConvert(
              'dispute',
              (v) => v == null
                  ? null
                  : Dispute.fromJson(v as Map<String, dynamic>)),
          order: $checkedConvert(
              'order',
              (v) =>
                  v == null ? null : Order.fromJson(v as Map<String, dynamic>)),
          buyerId: $checkedConvert('buyerId', (v) => (v as num?)?.toInt()),
          buyerName: $checkedConvert('buyerName', (v) => v as String?),
          sellerId: $checkedConvert('sellerId', (v) => (v as num?)?.toInt()),
          sellerName: $checkedConvert('sellerName', (v) => v as String?),
          type: $checkedConvert(
              'type',
              (v) => $enumDecodeNullable(_$DisputeQueryResultTypeEnumEnumMap, v,
                  unknownValue:
                      DisputeQueryResultTypeEnum.unknownDefaultOpenApi)),
          status: $checkedConvert(
              'status',
              (v) => $enumDecodeNullable(
                  _$DisputeQueryResultStatusEnumEnumMap, v,
                  unknownValue:
                      DisputeQueryResultStatusEnum.unknownDefaultOpenApi)),
          description: $checkedConvert('description', (v) => v as String?),
          adminComment: $checkedConvert('adminComment', (v) => v as String?),
          createdAt: $checkedConvert('createdAt',
              (v) => v == null ? null : DateTime.parse(v as String)),
          resolvedAt: $checkedConvert('resolvedAt',
              (v) => v == null ? null : DateTime.parse(v as String)),
        );
        return val;
      },
    );

Map<String, dynamic> _$DisputeQueryResultToJson(DisputeQueryResult instance) =>
    <String, dynamic>{
      if (instance.dispute?.toJson() case final value?) 'dispute': value,
      if (instance.order?.toJson() case final value?) 'order': value,
      if (instance.buyerId case final value?) 'buyerId': value,
      if (instance.buyerName case final value?) 'buyerName': value,
      if (instance.sellerId case final value?) 'sellerId': value,
      if (instance.sellerName case final value?) 'sellerName': value,
      if (_$DisputeQueryResultTypeEnumEnumMap[instance.type] case final value?)
        'type': value,
      if (_$DisputeQueryResultStatusEnumEnumMap[instance.status]
          case final value?)
        'status': value,
      if (instance.description case final value?) 'description': value,
      if (instance.adminComment case final value?) 'adminComment': value,
      if (instance.createdAt?.toIso8601String() case final value?)
        'createdAt': value,
      if (instance.resolvedAt?.toIso8601String() case final value?)
        'resolvedAt': value,
    };

const _$DisputeQueryResultTypeEnumEnumMap = {
  DisputeQueryResultTypeEnum.PRODUCT_QUALITY: 'PRODUCT_QUALITY',
  DisputeQueryResultTypeEnum.DELIVERY_ISSUE: 'DELIVERY_ISSUE',
  DisputeQueryResultTypeEnum.REFUND_REQUEST: 'REFUND_REQUEST',
  DisputeQueryResultTypeEnum.OTHER: 'OTHER',
  DisputeQueryResultTypeEnum.unknownDefaultOpenApi: 'unknown_default_open_api',
};

const _$DisputeQueryResultStatusEnumEnumMap = {
  DisputeQueryResultStatusEnum.PENDING: 'PENDING',
  DisputeQueryResultStatusEnum.RESOLVED_REFUND: 'RESOLVED_REFUND',
  DisputeQueryResultStatusEnum.RESOLVED_COMPLETED: 'RESOLVED_COMPLETED',
  DisputeQueryResultStatusEnum.REJECTED: 'REJECTED',
  DisputeQueryResultStatusEnum.unknownDefaultOpenApi:
      'unknown_default_open_api',
};
